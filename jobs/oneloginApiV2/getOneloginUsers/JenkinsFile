/*
{
    "title" : "Get OneLogin Users",
    "job_name" : "getOneloginUsers",
    "docs" : "https://developers.onelogin.com/api-docs/2/users/list-users",
    "parent" : "oneloginAPIV2",
    "notes" : [
        "description" : "Use this API to get a paginated list of users in a OneLogin account."
    ]
}
*/

pipeline {
    agent any
    stages {
        stage("00 - Get OneLogin Users") {
            steps {
                withCredentials([
                    string(credentialsId: env.credentialId, variable: 'olAccessToken')
                ]) {
                    script {
                        env.response = powershell(
                            returnStdout: true,
                            script: '''
                            # define params
                            $params = @{
                                Method = "GET"
                                Headers = @{
                                    Authorization  = ("bearer " + $Env:olAccessToken)
                                }
                                Uri = ("https://api." + $Env:oneloginDomainRegion + ".onelogin.com/api/2/users")
                            }
                            # execute api call
                            Try {
                                # invoke rest method
                                $response = Invoke-RestMethod @params -FollowRelLink
                                # set export file pat
                                $fileOutput = ($Env:s3ExportDirectory + 'get_onelogin_users_' + (Get-Date -f yyyy-MM-dd-THH-mm-ss) + '.json')
                                # export result to file
                                $response | ConvertTo-Json | Out-File -Path $fileOutput
                                # write output file path to the console
                                Write-Host $fileOutput
                                # return the file path
                                Write-Output $fileOutput
                            } Catch {
                                # write error to console
                                Write-Host $_.ErrorDetails.Message
                                # throw error
                                exit 1
                            }
                        ''')
                    }
                }
            }
        }
    }
}